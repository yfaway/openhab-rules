/**
 * Naming convention: <area>_<room>_<type>_<name>.
 * List of areas: 
 *  BM = basement, FF = first floor, SF = second floor, VT = virtual item. 
 * Groups have the "g" prefix.
 */

/**
 * Alert items.
 */
String VT_AlertSender

/**
 * Astro items.
 */
String VT_Time_Of_Day "Current Time of Day [%s]"
DateTime VT_Sunrise_Time "Sunrise [%1$tH:%1$tM]"
    { channel="astro:sun:home:rise#start" }
DateTime VT_Sunset_Time  "Sunset [%1$tH:%1$tM]"  
    { channel="astro:sun:home:set#start" }

// TODO figure out how to do this with offsets instead of a new Thing
DateTime VT_Evening_Time "Evening [%1$tH:%1$tM]" 
    { channel="astro:sun:minus90:set#start" }

/**
 * Temperature and humidity.
 */
Group:Number:AVG gTemperature "House Temperature [%.1f °C]"
Group:Number:AVG gHumidity "House Humidity [%d %%]"

/**
 * Ecobee
 */
Group gEcobeeRuntime

String FF_GreatRoom_Thermostat_EcobeeName "Name [%s]" { ecobee="=[411921197263#name]" }
Number FF_GreatRoom_Thermostat_ActualTemperature "House Temperature [%.1f °C]" (gTemperature, gEcobeeRuntime) 
  { ecobee="<[411921197263#runtime.actualTemperature]" }
Number FF_GreatRoom_Thermostat_ActualHumidity "House Humidity [%d %%]" (gHumidity, gEcobeeRuntime) 
  { ecobee="<[411921197263#runtime.actualHumidity]" }
Number FF_GreatRoom_Thermostat_DesiredHeat "Desired Heat [%.1f °C]" (gEcobeeRuntime) 
  { ecobee="<[411921197263#runtime.desiredHeat]" }
Number FF_GreatRoom_Thermostat_DesiredCool "Desired Cool [%.1f °C]" (gEcobeeRuntime) 
  { ecobee="<[411921197263#runtime.desiredCool]" }
String FF_GreatRoom_Thermostat_DesiredFanMode "Desired Fan Mode [%s]" (gEcobeeRuntime) 
  { ecobee="<[411921197263#runtime.desiredFanMode]" }

String FF_GreatRoom_Thermostat_HvacMode "Hvac Mode [%s]" (gEcobeeRuntime) 
  { ecobee="=[411921197263#settings.hvacMode]" }
String FF_GreatRoom_Thermostat_CurrentClimateRef "Current Profile [%s]"  
  { ecobee="<[411921197263#program.currentClimateRef]" }

String FF_GreatRoom_Thermostat_FirstEvent_Type "First Event Type [%s]"       
  { ecobee="<[411921197263#events[0].type]" }

String VT_Outdoor_WeatherCondition "Weather Condition [%s]" (gWeather) 
  { ecobee="<[411921197263#weather.forecasts[0].condition]" }
Number VT_Outdoor_Temperature "Outdoor Temperature [%.1f °C]" (gWeather) 
  { ecobee="<[411921197263#weather.forecasts[0].temperature]" }
Number VT_Outdoor_RelativeHumidity "Relative Humidity [%d %%]" (gWeather) 
  { ecobee="<[411921197263#weather.forecasts[0].relativeHumidity]" }

Switch FF_GreatRoom_Thermostat_RoomOccupancy "Great Room Occupancy [%s]" 
  { ecobee="<[411921197263#remoteSensors(Main Floor).capability(occupancy).value]" }

/**
 * Security system
 */
Group gZone
Group:Switch:OR(ON,OFF) gZoneTripped "A zone is tripped"
Group:Switch:OR(ON,OFF) gZoneInAlarm "A zone is in alarm"

Group:Contact:OR(OPEN, CLOSED) gZoneStatus "A zone is open"

Switch PARTITION1_IN_ALARM (DSCAlarmPartitions) 
  {channel="dscalarm:partition:706cd89d:partition1:partition_in_alarm"}
Number PARTITION1_ARM_MODE "Partition 1 Arm Mode: [%d]" (DSCAlarmPartitions) 
  {channel="dscalarm:partition:706cd89d:partition1:partition_arm_mode"}

Number KEYPAD_FIRE_LED "Fire LED Status" <fireLED> (DSCAlarmKeypads) 
  {channel="dscalarm:keypad:706cd89d:keypad:keypad_fire_led"}

String FF_FrontDoor "Front Door" (gZone)
String FF_GarageDoor "Garage Door" (gZone)
String FF_PatioDoor "Patio Door" (gZone)
String FF_GreatRoom_MotionSensor "Motion Sensor" (gZone)
String FF_Windows "Windows" (gZone)

Switch FF_FrontDoor_InAlarm (gZoneInAlarm) {channel="dscalarm:zone:706cd89d:zone1:zone_in_alarm"}
Switch FF_GarageDoor_InAlarm (gZoneInAlarm) {channel="dscalarm:zone:706cd89d:zone2:zone_in_alarm"}
Switch FF_PatioDoor_InAlarm (gZoneInAlarm) {channel="dscalarm:zone:706cd89d:zone3:zone_in_alarm"}
Switch FF_GreatRoom_MotionSensor_InAlarm (gZoneInAlarm) {channel="dscalarm:zone:706cd89d:zone4:zone_in_alarm"}
Switch FF_Windows_InAlarm (gZoneInAlarm) {channel="dscalarm:zone:706cd89d:zone5:zone_in_alarm"}

Switch FF_FrontDoor_Tripped (gZoneTripped, FF_Foyer_LightSwitch_MotionSensor) 
  {channel="dscalarm:zone:706cd89d:zone1:zone_tripped"}
Switch FF_GarageDoor_Tripped (gZoneTripped, FF_Foyer_LightSwitch_MotionSensor) 
  {channel="dscalarm:zone:706cd89d:zone2:zone_tripped"}
Switch FF_PatioDoor_Tripped (gZoneTripped) {channel="dscalarm:zone:706cd89d:zone3:zone_tripped"}
Switch FF_GreatRoom_MotionSensor_Tripped 
  (gZoneTripped, gFirstFloorMotionSensors, FF_Kitchen_LightSwitch_MotionSensor, 
   FF_GreatRoom_LightSwitch_MotionSensor)
  {channel="dscalarm:zone:706cd89d:zone4:zone_tripped"}
Switch FF_Windows_Tripped (gZoneTripped) {channel="dscalarm:zone:706cd89d:zone5:zone_tripped"}

Contact FF_FrontDoor_Status (gZoneStatus) 
  {channel="dscalarm:zone:706cd89d:zone1:zone_status"}
Contact FF_GarageDoor_Status (gZoneStatus) 
  {channel="dscalarm:zone:706cd89d:zone2:zone_status"}
Contact FF_PatioDoor_Status (gZoneStatus) 
  {channel="dscalarm:zone:706cd89d:zone3:zone_status"}
Contact FF_Windows_Status (gZoneStatus) 
  {channel="dscalarm:zone:706cd89d:zone5:zone_status"}

/**
 * Garage door
 */
Contact GarageDoorContact       "Garage Door [%s]" <contact> {myq="0"}
String GarageDoorString         "Garage Door [%s]"           {myq="0"}
Switch GarageDoorSwitch         "Garage Door Open"           {myq="0"}


Switch MQTT_Test "Testing..." { mqtt="<[broker:testing/mqtt/topic:state:default], >[broker:testing/mqtt/back-topic:command:*:default]" } 
