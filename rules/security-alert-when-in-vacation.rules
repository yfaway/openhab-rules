/**
 * If the system is in vacation mode, send an alert whenever the security
 * system changes state, or when a zone is tripped.
 * The idea is that while the owner is away, they would want to know
 * immediately when a door is open or when the security sytem is arm/unarm.
 * No need to alert in-alarm event as that is tracked in another rule.
 */

val LOGGER_NAME = "SecurityAlertWhenOwnerInVacationRules"

/**
 * How often the alert should be sent.
 */
val ALERT_INTERVAL_IN_MINUTES = 2

/**
 * The alert modules to track the alert interval.
 */
val ALERT_MODULE_TRIPPED = "vacation-mode-zone-tripped"
val ALERT_MODULE_ARM_STATE_CHANGED = "vacation-mode-arm-state-changed"

rule "Alert when a zone is tripped (vacation)"
when
  Member of gZoneTripped changed to ON
then
  if (ON != VT_In_Vacation.state) {
    return
  }

  // Ignore motion sensor since it will generate too many events.
  if ( FF_GreatRoom_MotionSensor_Tripped != triggeringItem ) {
    val zoneName = triggeringItem.name.substring(0, triggeringItem.name.lastIndexOf("_"))
    val zoneLocation = gZone.members.findFirst[ z | z.name == zoneName ].label

    val subject = zoneLocation + " is open (vacation mode)"

    var msg = "{"
    msg += "\"subject\":\"" + subject + "\""
    msg += ",\"module\":\"" + ALERT_MODULE_TRIPPED + "\""
    msg += ",\"intervalBetweenAlertsInMinutes\":\"" + ALERT_INTERVAL_IN_MINUTES + "\""
    msg += "}"

    VT_AlertSender.postUpdate(msg)
  }
end

rule "Alert when security arm state changes (vacation)"
when
  Item PARTITION1_ARM_MODE changed
then
  if (ON != VT_In_Vacation.state) {
    return
  }

  val stateInt = PARTITION1_ARM_MODE.state
  var state = transform("MAP", "security-arm-states.map", String.valueOf(stateInt))
  if (null === state) {
    state = String.valueOf(stateInt);
  }

  val subject = "Security system state changed to " + state + " (vacation mode)"

  var msg = "{"
  msg += "\"subject\":\"" + subject + "\""
  msg += ",\"module\":\"" + ALERT_MODULE_ARM_STATE_CHANGED + "\""
  msg += ",\"intervalBetweenAlertsInMinutes\":\"" + ALERT_INTERVAL_IN_MINUTES + "\""
  msg += "}"

  VT_AlertSender.postUpdate(msg)
end
