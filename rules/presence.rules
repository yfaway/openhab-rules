/**
 * Manages the presence state through the Network binding and the motion 
 * sensors.
 * Manage the vacation state through the Ecobee sensor.
 * Dependencies: Ecobee and Network bindings.
 */

val LOGGER_NAME = "Presence"

val VACATION = "vacation"

rule "Init presence states"
when
  System started
then
  gPresence.sendCommand(OFF)
  gOwnerPresence.sendCommand(OFF)
  gOwner1Presence.sendCommand(OFF)
  gOwner2Presence.sendCommand(OFF)
  Presence_Owner1_Just_Got_Home.sendCommand(OFF)
  Presence_Owner2_Just_Got_Home.sendCommand(OFF)
  Security_Motion_Sensor_Triggered.sendCommand(OFF)

  if ( FF_GreatRoom_Thermostat_FirstEvent_Type.state == VACATION ) {
    VT_In_Vacation.sendCommand(ON)
  }
  else {
    VT_In_Vacation.sendCommand(OFF)
  }
end

rule "Update the last presence timestamp"
when
  Member of gPresence changed to ON
then
  VT_Last_Presence_Timestamp.sendCommand(new DateTimeType())
end

rule "Set first floor presence timer to ON"
when
  Member of gFirstFloorMotionSensors changed to ON
then
  gFirstFloorPresence.sendCommand(ON)
end

rule "Set second floor presence timer to ON"
when
  Member of gSecondFloorMotionSensors changed to ON
then
  gSecondFloorPresence.sendCommand(ON)
end

rule "Update owner1's got home state when user is online"
when
  Item Presence_Owner1_Phone changed from OFF to ON
then
  Presence_Owner1_Just_Got_Home.sendCommand(ON)
end

rule "Update owner1's got home state when user is offline"
when
  Item Presence_Owner1_Phone changed from ON to OFF
then
  Presence_Owner1_Just_Got_Home.sendCommand(OFF)
end

rule "Update owner2's got home state when user is online"
when
  Item Presence_Owner2_Phone changed from OFF to ON
then
  Presence_Owner2_Just_Got_Home.sendCommand(ON)
end

rule "Update owner2's got home state when user is offline"
when
  Item Presence_Owner2_Phone changed from ON to OFF
then
  Presence_Owner2_Just_Got_Home.sendCommand(OFF)
end

rule "Update the vacation state based on the Ecobee's event type"
when
  Item FF_GreatRoom_Thermostat_FirstEvent_Type changed
then
  switch FF_GreatRoom_Thermostat_FirstEvent_Type.state  {
    case VACATION: VT_In_Vacation.sendCommand(ON)
    default: VT_In_Vacation.sendCommand(OFF)
  }
end
